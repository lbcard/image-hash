name: Code Checks
on:   
  pull_request:
      branches:
        - codeChecks
jobs:
  Test-Code:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
      - run: npm i
      - run: npm run test
      - name: Tests ✅
              if: ${{ success() }}
              run: |
                curl --request POST --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' --header 'content-type: application/json' --data '{
                  "context": "tests",
                  "state": "success",
                  "description": "Tests passed",
                  "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                }'
      - name: Tests 🚨
          if: ${{ failure() }}
          run: |
            curl --request POST --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' --header 'content-type: application/json' --data '{
              "context": "tests",
              "state": "failure",
              "description": "Tests failed",
              "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }'